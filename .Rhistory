)
# Form request URL
# channelId=UCAuUUnT6oDeKwE6v1NGQxug is the TED channel, used here as an example
url <- paste0(Base_URL, "/", sprintf(YT_Service[2], 'UCAuUUnT6oDeKwE6v1NGQxug', API_key))
# Perform query
result <- fromJSON(json_str, txt=url)
# Print the title of the channels this channel has subscribed to
result$items$snippet$title
# Print the Id's of the channels this channel has subscribed to
result <- fromJSON(txt=url)
# Print the title of the channels this channel has subscribed to
result$items$snippet$title
# Print the Id's of the channels this channel has subscribed to
result$items$snippet$resourceId$channelId
API_key='AIzaSyAFot4QVTGFxQTMZB8_hUxIzOqQQ-WnxQI'
# Base URL for Google API's services and YouTube specific API's
Base_URL='https://www.googleapis.com/youtube/v3'
# YouTube Web Services
# Note that we have replaced the %2C with "," so sprintf works correctly with it
# as an alternative we can add an extra % in front of %2C to make it %%2C
YT_Service <- c( 'search?part=snippet&q=%s&type=%s&key=%s',                         # search API
'subscriptions?part=snippet,contentDetails&channelId=%s&key=%s'    # subscriptions API
)
# Form request URL
# channelId=UCAuUUnT6oDeKwE6v1NGQxug is the TED channel, used here as an example
url <- paste0(Base_URL, "/", sprintf(YT_Service[2], 'UCAuUUnT6oDeKwE6v1NGQxug', API_key))
# Perform query
result <- fromJSON(txt=url)
# Print the title of the channels this channel has subscribed to
result$items$snippet$title
# Print the Id's of the channels this channel has subscribed to
result$items$snippet$resourceId$channelId
Base_URL='GET https://www.googleapis.com/youtube/v3/videos'
# YouTube Web Services
# Note that we have replaced the %2C with "," so sprintf works correctly with it
# as an alternative we can add an extra % in front of %2C to make it %%2C
YT_Service <- c( 'search?part=snippet&q=%s&type=%s&key=%s',                         # search API
'subscriptions?part=snippet,contentDetails&channelId=%s&key=%s'    # subscriptions API
)
# Form request URL
# channelId=UCAuUUnT6oDeKwE6v1NGQxug is the TED channel, used here as an example
url <- paste0(Base_URL, "/", sprintf(YT_Service[2], 'UCAuUUnT6oDeKwE6v1NGQxug', API_key))
# Perform query
result <- fromJSON(txt=url)
# Print the title of the channels this channel has subscribed to
result$items$snippet$title
# Print the Id's of the channels this channel has subscribed to
result$items$snippet$resourceId$channelId
Base_URL='https://www.googleapis.com/youtube/v3/videos'
# YouTube Web Services
# Note that we have replaced the %2C with "," so sprintf works correctly with it
# as an alternative we can add an extra % in front of %2C to make it %%2C
YT_Service <- c( 'search?part=snippet&q=%s&type=%s&key=%s',                         # search API
'subscriptions?part=snippet,contentDetails&channelId=%s&key=%s'    # subscriptions API
)
# Form request URL
# channelId=UCAuUUnT6oDeKwE6v1NGQxug is the TED channel, used here as an example
url <- paste0(Base_URL, "/", sprintf(YT_Service[2], 'UCAuUUnT6oDeKwE6v1NGQxug', API_key))
# Perform query
result <- fromJSON(txt=url)
# Print the title of the channels this channel has subscribed to
result$items$snippet$title
# Print the Id's of the channels this channel has subscribed to
result$items$snippet$resourceId$channelId
API_key='AIzaSyAFot4QVTGFxQTMZB8_hUxIzOqQQ-WnxQI'
# Base URL for Google API's services and YouTube specific API's
Base_URL='https://www.googleapis.com/youtube/v3/videos'
# YouTube Web Services
# Note that we have replaced the %2C with "," so sprintf works correctly with it
# as an alternative we can add an extra % in front of %2C to make it %%2C
YT_Service <- c( 'search?part=snippet&q=%s&type=%s&key=%s',                         # search API
'subscriptions?part=snippet,contentDetails&channelId=%s&key=%s'    # subscriptions API
)
# Form request URL
# channelId=UCAuUUnT6oDeKwE6v1NGQxug is the TED channel, used here as an example
url <- paste0(Base_URL, "/", sprintf(YT_Service[2], 'UCAuUUnT6oDeKwE6v1NGQxug', API_key))
# Perform query
result <- fromJSON(txt=url)
# Print the title of the channels this channel has subscribed to
API_key='AIzaSyAFot4QVTGFxQTMZB8_hUxIzOqQQ-WnxQI'
# Base URL for Google API's services and YouTube specific API's
Base_URL='https://www.googleapis.com/youtube/v3/videos/getRating'
# YouTube Web Services
# Note that we have replaced the %2C with "," so sprintf works correctly with it
# as an alternative we can add an extra % in front of %2C to make it %%2C
YT_Service <- c( 'search?part=snippet&q=%s&type=%s&key=%s',                         # search API
'videos?part=snippet,contentDetails&channelId=%s&key=%s'    # subscriptions API
)
# Form request URL
# channelId=UCAuUUnT6oDeKwE6v1NGQxug is the TED channel, used here as an example
url <- paste0(Base_URL, "/", sprintf(YT_Service[2], 'UCAuUUnT6oDeKwE6v1NGQxug', API_key))
# Perform query
result <- fromJSON(txt=url)
# Print the title of the channels this channel has subscribed to
result$items$snippet$title
# Print the Id's of the channels this channel has subscribed to
result$items$snippet$resourceId$channelId
API_key='AIzaSyAFot4QVTGFxQTMZB8_hUxIzOqQQ-WnxQI'
# Base URL for Google API's services and YouTube specific API's
Base_URL='https://www.googleapis.com/youtube/v3/videos/getRating'
# YouTube Web Services
# Note that we have replaced the %2C with "," so sprintf works correctly with it
# as an alternative we can add an extra % in front of %2C to make it %%2C
YT_Service <- c( 'search?part=snippet&q=%s&type=%s&key=%s',                         # search API
'videos?part=statistics,contentDetails&channelId=%s&key=%s'    # subscriptions API
)
# Form request URL
# channelId=UCAuUUnT6oDeKwE6v1NGQxug is the TED channel, used here as an example
url <- paste0(Base_URL, "/", sprintf(YT_Service[2], 'UCAuUUnT6oDeKwE6v1NGQxug', API_key))
# Perform query
result <- fromJSON(txt=url)
# Print the title of the channels this channel has subscribed to
result$items$snippet$title
# Print the Id's of the channels this channel has subscribed to
result$items$snippet$resourceId$channelId
require(curl)
require(jsonlite)
install.packages("jsonlite")
install.packages("curl")
install.packages("jsonlite")
install.packages("rjson")
install.packages("dplyr")
library(jsonlite)
# Your API key obtained via https://console.developers.google.com/
API_key='AIzaSyAFot4QVTGFxQTMZB8_hUxIzOqQQ-WnxQI'
API_key='AIzaSyAFot4QVTGFxQTMZB8_hUxIzOqQQ-WnxQI'
# Base URL for Google API's services and YouTube specific API's
Base_URL='https://www.googleapis.com/youtube/v3/videos/getRating'
# YouTube Web Services
# Note that we have replaced the %2C with "," so sprintf works correctly with it
# as an alternative we can add an extra % in front of %2C to make it %%2C
YT_Service <- c( 'search?part=snippet&q=%s&type=%s&key=%s',                         # search API
'videos?part=statistics,contentDetails&channelId=%s&key=%s'    # subscriptions API
)
# Form request URL
# channelId=UCAuUUnT6oDeKwE6v1NGQxug is the TED channel, used here as an example
url <- paste0(Base_URL, "/", sprintf(YT_Service[2], 'UCAuUUnT6oDeKwE6v1NGQxug', API_key))
# Perform query
result <- fromJSON(txt=url)
# Print the title of the channels this channel has subscribed to
API_key='AIzaSyDeGSLWPTmOS12oFvnpzg-kH0vJIzHqbJs'
# Base URL for Google API's services and YouTube specific API's
Base_URL='https://www.googleapis.com/youtube/v3/videos/getRating'
# YouTube Web Services
# Note that we have replaced the %2C with "," so sprintf works correctly with it
# as an alternative we can add an extra % in front of %2C to make it %%2C
YT_Service <- c( 'search?part=snippet&q=%s&type=%s&key=%s',                         # search API
'videos?part=statistics,contentDetails&channelId=%s&key=%s'    # subscriptions API
)
# Form request URL
# channelId=UCAuUUnT6oDeKwE6v1NGQxug is the TED channel, used here as an example
url <- paste0(Base_URL, "/", sprintf(YT_Service[2], 'UCAuUUnT6oDeKwE6v1NGQxug', API_key))
# Perform query
result <- fromJSON(txt=url)
# Print the title of the channels this channel has subscribed to
result$items$snippet$title
# Print the Id's of the channels this channel has subscribed to
result$items$snippet$resourceId$channelId
API_key='AIzaSyDeGSLWPTmOS12oFvnpzg-kH0vJIzHqbJs'
# Base URL for Google API's services and YouTube specific API's
Base_URL='https://www.googleapis.com/youtube/v3/videos/getRating'
# YouTube Web Services
# Note that we have replaced the %2C with "," so sprintf works correctly with it
# as an alternative we can add an extra % in front of %2C to make it %%2C
YT_Service <- c( 'search?part=snippet&q=%s&type=%s&key=%s',                         # search API
'videos?part=statistics,contentDetails=%s&key=%s'    # subscriptions API
)
# Form request URL
# channelId=UCAuUUnT6oDeKwE6v1NGQxug is the TED channel, used here as an example
url <- paste0(Base_URL, "/", sprintf(YT_Service[2], 'UCAuUUnT6oDeKwE6v1NGQxug', API_key))
# Perform query
result <- fromJSON(txt=url)
# Print the title of the channels this channel has subscribed to
result$items$snippet$title
result <- fromJSON(txt=url)
install.packages("curl")
install.packages("curl")
minutes_in_a_day <- 60 * 24
minutes_in_a_day
without_four <- movies[1:3, 5:6]
movies <- c('Frozen', 'Think Like A Man', 'Yours, Mine, & Ours', '21 Jump Street', 'Fast 7', 'Safe Haven')
# Create a vector top_three that only contains the first three movies in the vector
top_three <- movies[1:3]
# Using your vector and the paste method, create a vector excited that adds the phrase " is a great movie!" to the end of each element in your movies vector
cat(paste(top_three, "is a great movie!"))
# Create a vector without_four that has your first three movies, and your 5th and 6th movies.
without_four <- movies[1:3, 5:6]
# Create a vector `numbers` that is the numbers 700 through 999
numbers <- c(700:999)
print(numbers)
# Using the built in `length` function, create a variable `len` that is equal to the length of your vector `numbers`
len <- length(numbers)
without_four <- movies[1:3, 5:6]
top_three <- movies[1:3]
movies <- c('Frozen', 'Think Like A Man', 'Yours, Mine, & Ours', '21 Jump Street', 'Fast 7', 'Safe Haven')
# Create a vector top_three that only contains the first three movies in the vector
top_three <- movies[1:3]
# Using your vector and the paste method, create a vector excited that adds the phrase " is a great movie!" to the end of each element in your movies vector
cat(paste(top_three, "is a great movie!"))
# Create a vector without_four that has your first three movies, and your 5th and 6th movies.
without_four <- movies[1:3, 5:6]
without_four <- movies[5:6]
without_four <- movies[1:3,5:6]
top_three <- movies[1:3, 5:6]
top_three <- movies[1:3, 4]
top_three <- movies[1:3]
# Using your vector and the paste method, create a vector excited that adds the phrase " is a great movie!" to the end of each element in your movies vector
cat(paste(top_three, "is a great movie!"))
# Create a vector without_four that has your first three movies, and your 5th and 6th movies.
without_four <- movies[1:3,5:6]
install.packages("stringr")
library("stringr")
movies <- c('Frozen', 'Think Like A Man', 'Yours, Mine, & Ours', '21 Jump Street', 'Fast 7', 'Safe Haven')
# Create a vector top_three that only contains the first three movies in the vector
top_three <- movies[1:3]
# Using your vector and the paste method, create a vector excited that adds the phrase " is a great movie!" to the end of each element in your movies vector
cat(paste(top_three, "is a great movie!"))
# Create a vector without_four that has your first three movies, and your 5th and 6th movies.
without_four <- movies[1:3,5:6]
# Create a vector `numbers` that is the numbers 700 through 999
numbers <- c(700:999)
print(numbers)
# Using the built in `length` function, create a variable `len` that is equal to the length of your vector `numbers`
len <- length(numbers)
print(len)
# Using the `mean` function, create a variable `num_mean` that is the mean of your vector `numbers`
num_mean <- mean(numbers)
print(num_mean)
wihtout_four
without_four
without_four <- movies[1:3,5:6]
movies <- c('Frozen', 'Think Like A Man', 'Yours, Mine, & Ours', '21 Jump Street', 'Fast 7', 'Safe Haven')
# Create a vector top_three that only contains the first three movies in the vector
top_three <- movies[1:3]
# Using your vector and the paste method, create a vector excited that adds the phrase " is a great movie!" to the end of each element in your movies vector
cat(paste(top_three, "is a great movie!"))
# Create a vector without_four that has your first three movies, and your 5th and 6th movies.
without_four <- movies[1:3,5:6]
# Create a vector `numbers` that is the numbers 700 through 999
numbers <- c(700:999)
print(numbers)
# Using the built in `length` function, create a variable `len` that is equal to the length of your vector `numbers`
len <- length(numbers)
without_four <- movies(c[1:3,5:6])
without_four <- movies[1:3,5:6]
without_four <- paste(movies[1:3,5:6])
without_four <- movies.df[1:3,5:6]
without_four <- movies[c(1:3, 5:6)]
without_four
require(curl)
require(jsonlite)
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("curl")
install.packages("rjson")
install.packages("dplyr")
library(jsonlite)
# Your API key obtained via https://console.developers.google.com/
API_key='AIzaSyDeGSLWPTmOS12oFvnpzg-kH0vJIzHqbJs'
# Base URL for Google API's services and YouTube specific API's
Base_URL='https://www.googleapis.com/youtube/v3/videos/getRating'
# YouTube Web Services
# Note that we have replaced the %2C with "," so sprintf works correctly with it
# as an alternative we can add an extra % in front of %2C to make it %%2C
YT_Service <- c( 'search?part=snippet&q=%s&type=%s&key=%s',                         # search API
'videos?part=statistics,contentDetails=%s&key=%s'    # subscriptions API
)
# Form request URL
# channelId=UCAuUUnT6oDeKwE6v1NGQxug is the TED channel, used here as an example
url <- paste0(Base_URL, "/", sprintf(YT_Service[2], 'UCAuUUnT6oDeKwE6v1NGQxug', API_key))
# Perform query
result <- fromJSON(txt=url)
# Print the title of the channels this channel has subscribed to
result$items$snippet$title
# Print the Id's of the channels this channel has subscribed to
Base_URL='https://www.googleapis.com/youtube/v3/videos?part=statistics&id=Q5mHPo2yDG8&key=AIzaSyDeGSLWPTmOS12oFvnpzg-kH0vJIzHqbJs'
shiny::runApp('Desktop/a8_shiny')
shiny::runApp('Desktop/a8_shiny')
shiny::runApp('Desktop/a8_shiny')
shiny::runApp('Desktop/a8_shiny')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/a8_shiny')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/youtubemap')
shiny::runApp('Desktop/youtubemap')
shiny::runApp('Desktop/youtubemap')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/youtubemap')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Desktop/untitled folder')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Documents')
shiny::runApp('Desktop/youtubemap')
